{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"RaBe GitHub Actions","text":"<p>These are the reusable workflows that RaBe uses for CI/CD \u267b\ufe0f</p>"},{"location":"#usage","title":"Usage","text":"<p>See below for copy-pasteable examples of the provided actions.</p> <p>The examples use <code>@v0.0.0</code> as the target version of the action. You NEED to replace that with the current tag of this repository and also create the following <code>.github/dependabot.yaml</code>.</p> .github/dependabot.yaml<pre><code>version: 2\nupdates:\n  - package-ecosystem: \"github-actions\"\n    directory: \"/\"\n    schedule:\n      interval: \"daily\"\n    commit-message:\n      prefix: \"ci: \"\n</code></pre> <p>If you need multiple actions to happen then it's up to you to combine them as needed. Please add an example if you use the same combo more than once.</p>"},{"location":"#ansible-collections","title":"Ansible Collections","text":"<p>We have workflows for testing Ansible collections on GitHub Actions and for releasing your Ansible collections to Galaxy.</p>"},{"location":"#ansible-release","title":"Ansible: Release","text":"<p>Create the main <code>.github/workflows/release.yaml</code> file for an ansible collection repo:</p> .github/workflows/release.yaml<pre><code>name: Release\n\non:\n  release:\n    types:\n      - published\n\njobs:\n  release-ansible-collection:\n    uses: radiorabe/actions/.github/workflows/release-ansible-collection.yaml@v0.0.0\n    secrets:\n      GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }} # (1)\n</code></pre> <ol> <li>The <code>GALAXY_API_KEY</code> is shared across our repos and can be enabled for your    repo by a GitHub organisation admin.</li> </ol> <p>The collections we publish with this can be found on our Galaxy page.</p>"},{"location":"#ansible-test","title":"Ansible: Test","text":"<p>Create the main <code>.github/workflows/test.yaml</code> file for an ansible collection repo:</p> .github/workflows/test.yaml<pre><code>name: Lint and Test\n\non:\n  pull_request:\n    branches:\n      - main\n\njobs:\n  test-ansible-collection:\n    uses: radiorabe/actions/.github/workflows/test-ansible-collection.yaml@v0.0.0\n</code></pre>"},{"location":"#container-images","title":"Container Images","text":"<p>There are actions to cover the full lifecycle of a typical container image.</p>"},{"location":"#container-release","title":"Container: Release","text":"<p>To build, scan, and sign a container image , create this <code>.github/workflows/release.yaml</code>:</p> .github/workflows/release.yaml<pre><code>name: Release\n\non:\n  pull_request:\n  push:\n    branches:\n      - main\n    tags:\n      - '*'\n\njobs:\n  release-container:\n    uses: radiorabe/actions/.github/workflows/release-container.yaml@v0.0.0\n    with:\n      image: 'ghcr.io/radiorabe/&lt;name&gt;' # (1)\n      name: &lt;name&gt; # (2)\n      display-name: &lt;display-name&gt; # (3)\n      tags: &lt;tags&gt; # (4)\n      cosign-verify: true # (5)\n      cosign-certificate-oidc-issuer: [issues] # (6)\n      cosign-certificate-identity-regexp: [regexp] # (7)\n      cosign-base-image-only: [true] # (8)\n</code></pre> <ol> <li>Replace this with the actual name of the image, usually something like the    name of your repo with maybe a <code>container-image-</code> prefix removed.</li> <li>Replace the name with the stem of the image</li> <li>Put a human friendly string into display-name.</li> <li>Tags are usually <code>minimal rhel9 rabe</code> plus additional tags for the image    at hand.</li> <li>Enable image scanning. This only needs to be disabled for base image that    we don't sign ourself.</li> <li>Defaults to GitHub as an issuer and only needs tuning in special cases.</li> <li>The default <code>https://github.com/radiorabe/.*</code> allows signatures from all    of our orga, add a more specific regexp if you feel the need.</li> <li>Pass <code>--base-image-only</code> to cosign if you are copying binaries from a    source image that isn't signed with cosign.</li> </ol> <p>As a last step, it is recommended to add <code>trivy.*</code> to both your <code>.gitignore</code> and <code>.dockerignore</code> files so trivy can't interfere with multi-stage builds.</p>"},{"location":"#container-schedule","title":"Container: Schedule","text":"<p>To scan the latest container image with trivy at regular intervals, create this <code>.github/workflows/schedule.yaml</code>:</p> .github/workflows/schedule.yaml<pre><code>name: Scheduled tasks\n\non:\n  schedule:\n    - cron:  '13 12 * * *'\n  workflow_dispatch:\n\njobs:\n  schedule-trivy:\n    uses: radiorabe/actions/.github/workflows/schedule-trivy.yaml@v0.0.0\n    with:\n      image-ref: 'ghcr.io/radiorabe/&lt;name&gt;:latest' # (1)\n</code></pre> <ol> <li>Replace this with the actual name of the image, usually something like the    name of your repo with maybe a <code>container-image-</code> prefix removed.</li> </ol>"},{"location":"#pre-commit","title":"Pre Commit","text":"<p>Create the main <code>.github/workflows/test.yaml</code> file for a project that supports pre-commit:</p> .github/workflows/test.yaml<pre><code>name: Lint and Test\n\non:\n  pull_request:\n    branches:\n      - main\n\njobs:\n  pre-commit:\n    uses: radiorabe/actions/.github/workflows/test-pre-commit.yaml@v0.0.0\n</code></pre> <p>This runs pre-commit with black and isort installed. If you need more tools you can install them with <code>pip</code>.</p> .github/workflows/test.yaml<pre><code>jobs:\n  pre-commit:\n    uses: radiorabe/actions/.github/workflows/test-pre-commit.yaml@v0.0.0\n    with:\n      requirements: black isort\n</code></pre>"},{"location":"#python","title":"Python","text":"<p>Our Python workflows use Poetry for installing dependencies, pytest for testing, and Poetry for publishing to pypi.</p>"},{"location":"#python-poetry-pytest","title":"Python: Poetry Pytest","text":"<p>Create the main <code>.github/workflows/test.yaml</code> file for an ansible collection repo:</p> .github/workflows/test.yaml<pre><code>name: Lint and Test\n\non:\n  pull_request:\n    branches:\n      - main\n\njobs:\n  test-python-poetry:\n    uses: radiorabe/actions/.github/workflows/test-python-poetry.yaml@v0.0.0\n</code></pre> <p>Configure your <code>pyproject.toml</code> to run pytest and you are good to go.</p>"},{"location":"#python-poetry-release","title":"Python: Poetry Release","text":"<p>Create this `.github/workflows/release.yaml</p> .github/workflows/release.yaml<pre><code>name: Release\n\non:\n  pull_request:\n  push:\n    branches: [main]\n  release:\n    types: [created]\n\njobs:\n  python-poetry:\n    uses: radiorabe/actions/.github/workflows/release-python-poetry.yaml@v0.0.0\n    secrets:\n      RABE_PYPI_TOKEN: ${{ secrets.RABE_PYPI_TOKEN }} # (1)\n</code></pre> <ol> <li>The <code>RABE_PYPI_TOKEN</code> is shared across our repos and can be enabled for your    repo by a GitHub organisation admin.</li> </ol> <p>Configure your <code>pyproject.toml</code> for releasing and your <code>mkdocs.yml</code> to generate proper documentation and you are good to go.</p>"},{"location":"#mkdocs","title":"Mkdocs","text":"<p>For repos that contain documentation built with mkdocs that do not use the poetry action.</p> <p>Create a <code>.github/workflows/release.yaml</code> file with the following content:</p> <pre><code>name: Release\n\non:\n  push:\n    main\n  pull_request:\n\njobs:\n  release-mkdocs:\n    uses: radiorabe/actions/.github/workflows/release-mkdocs.yaml@v0.0.0\n</code></pre> <p>Add a <code>mkdocs.yaml</code> config and <code>docs/</code> directory and you are good to go.</p>"},{"location":"#semantic-release","title":"Semantic Release","text":"<p>For repos that want to use go-semantic-release:</p> <p>Create this <code>.github/workflows/semantic-release.yaml</code>:</p> .github/workflows/semantic-release.yaml<pre><code>name: Semantic Release\n\non:\n  push:\n    branches:\n      - main\n      - release/*\n\njobs:\n  semantic-release:\n    uses: radiorabe/actions/.github/workflows/semantic-release.yaml@v0.0.0\n    secrets:\n      RABE_ITREAKTION_GITHUB_TOKEN: ${{ secrets.RABE_ITREAKTION_GITHUB_TOKEN }} # (1)\n</code></pre> <ol> <li>The <code>RABE_ITREAKTION_GITHUB_TOKEN</code> is shared across our repos and can be enabled for your    repo by a GitHub organisation admin.</li> </ol>"},{"location":"#license","title":"License","text":"<p>These reuseable workflows are free software: you can redistribute them and/or modify them under the terms of the GNU Affero General Public License as published by the Free Software Foundation, version 3 of the License.</p>"},{"location":"#copyright","title":"Copyright","text":"<p>Copyright (c) 2022 Radio Bern RaBe</p>"}]}