{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"RaBe GitHub Actions","text":"<p>These are the reusable workflows that RaBe uses for CI/CD \u267b\ufe0f</p>"},{"location":"#usage","title":"Usage","text":"<p>See below for copy-pasteable examples of the provided actions.</p> <p>The examples use <code>@main</code> as the target version of the action. You should replace that with the current tag of this repository and also create the following <code>.github/dependabot.yaml</code>.</p> .github/dependabot.yaml<pre><code>version: 2\nupdates:\n- package-ecosystem: \"github-actions\"\ndirectory: \"/\"\nschedule:\ninterval: \"daily\"\ncommit-message:\nprefix: \"chore(ci): \"\n</code></pre> <p>If you need multiple actions to happen then it's up to you to combine them as needed. Please add an example if you use the same combo more than once.</p>"},{"location":"#ansible-collections","title":"Ansible Collections","text":"<p>We have workflows for testing Ansible collectionis on GitHub Actions and for releasing your Ansible collections to Galaxy.</p>"},{"location":"#ansible-collections-release","title":"Ansible Collections: Release","text":"<p>Create the main <code>.github/workflows/release.yaml</code> file for an ansible collection repo:</p> .github/workflows/release.yaml<pre><code>name: Release\non:\nrelease:\ntypes:\n- published\njobs:\nrelease-ansible-collection:\nuses: radiorabe/actions/.github/workflows/release-ansible-collection.yaml@main\nsecrets:\nGALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }} # (1)\n</code></pre> <ol> <li>The <code>GALAXY_API_KEY</code> is shared across our repos and can be enabled for your    repo by a GitHub organisation admin.</li> </ol> <p>The collections we publish with this can be found on our Galaxy page.</p>"},{"location":"#ansible-collections-test","title":"Ansible Collections: Test","text":"<p>Create the main <code>.github/workflows/test.yaml</code> file for an ansible collection repo:</p> .github/workflows/test.yaml<pre><code>name: Lint and Test\non:\npull_request:\nbranches:\n- main\njobs:\ntest-ansible-collection:\nuses: radiorabe/actions/.github/workflows/test-ansible-collection.yaml@main\n</code></pre>"},{"location":"#pre-commit","title":"Pre Commit","text":"<p>Create the main <code>.github/workflows/test.yaml</code> file for a project that supports pre-commit:</p> .github/workflows/test.yaml<pre><code>name: Lint and Test\non:\npull_request:\nbranches:\n- main\njobs:\npre-commit:\nuses: radiorabe/actions/.github/workflows/test-pre-commit.yaml@main\n</code></pre> <p>This runs pre-commit with black and isort installed. If you need more tools you can install them with <code>pip</code>.</p> .github/workflows/test.yaml<pre><code>jobs:\npre-commit:\nuses: radiorabe/actions/.github/workflows/test-pre-commit.yaml@main\nwith:\nrequirements: black isort\n</code></pre>"},{"location":"#python-poetry-pytest","title":"Python: Poetry Pytest","text":"<p>Create the main <code>.github/workflows/test.yaml</code> file for an ansible collection repo:</p> .github/workflows/test.yaml<pre><code>name: Lint and Test\non:\npull_request:\nbranches:\n- main\njobs:\ntest-python-poetry:\nuses: radiorabe/actions/.github/workflows/test-python-poetry.yaml@main\n</code></pre> <p>Configure your <code>pyproject.toml</code> to run pytest and you are good to go.</p>"},{"location":"#python-poetry-release","title":"Python: Poetry Release","text":"<p>Create this `.github/workflows/release.yaml</p> .github/workflows/release.yaml<pre><code>name: Release\non:\npull_request:\npush:\nbranches: [main]\nrelease:\ntypes: [created]\njobs:\npython-poetry:\nuses: radiorabe/actions/.github/workflows/release-python-poetry.yaml@main\nsecrets:\nRABE_PYPI_TOKEN: ${{ secrets.RABE_PYPI_TOKEN }} # (1)\n</code></pre> <ol> <li>The <code>RABE_PYPI_TOKEN</code> is shared across our repos and can be enabled for your    repo by a GitHub organisation admin.</li> </ol> <p>Configure your <code>pyproject.toml</code> for releasing and your <code>mkdocs.yml</code> to generate proper documentation and you are good to go.</p>"},{"location":"#semantic-release","title":"Semantic Release","text":"<p>For repos that want to use go-semantic-release:</p> <p>Create this <code>.github/workflows/semantic-release.yaml</code>:</p> .github/workflows/semantic-release.yaml<pre><code>name: Semantic Release\non:\npush:\nbranches:\n- main\n- release/*\njobs:\nsemantic-release:\nuses: radiorabe/actions/.github/workflows/semantic-release.yaml@main\nsecrets:\nRABE_ITREAKTION_GITHUB_TOKEN: ${{ secrets.RABE_ITREAKTION_GITHUB_TOKEN }} # (1)\n</code></pre> <ol> <li>The <code>RABE_ITREAKTION_GITHUB_TOKEN</code> is shared across our repos and can be enabled for your    repo by a GitHub organisation admin.</li> </ol>"},{"location":"#trivy","title":"Trivy","text":"<p>Create this <code>.github/workflows/schedule.yaml</code>:</p> .github/workflows/schedule.yaml<pre><code>name: Scheduled tasks\non:\nschedule:\n- cron:  '13 12 * * *'\nworkflow_dispatch:\njobs:\nschedule-trivy:\nuses: radiorabe/actions/.github/workflows/schedule-trivy.yaml@main\nwith:\nimage-ref: 'ghcr.io/radiorabe/&lt;name&gt;:latest' # (1)\n</code></pre> <ol> <li>Replace this with the actual name of the image, usually something like the    name of your repo with maybe a <code>container-image-</code> prefix removed.</li> </ol>"},{"location":"#license","title":"License","text":"<p>These reuseable workflows are free software: you can redistribute them and/or modify them under the terms of the GNU Affero General Public License as published by the Free Software Foundation, version 3 of the License.</p>"},{"location":"#copyright","title":"Copyright","text":"<p>Copyright (c) 2022 Radio Bern RaBe</p>"}]}